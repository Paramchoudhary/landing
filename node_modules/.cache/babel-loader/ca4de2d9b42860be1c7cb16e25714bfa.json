{"ast":null,"code":"var _jsxFileName = \"/Users/akanshchoudhary/Desktop/isApplesiliconready/paramReact/src/component/Textit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport copy from \"copy-to-clipboard\";\nimport './A.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textit(props) {\n  _s();\n\n  const handleUpClick = () => {\n    ;\n    copy(text);\n  };\n\n  const handleUpChange = event => {\n    ;\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-body my-5\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control col-xs-12\",\n          value: text,\n          onChange: handleUpChange,\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"btnn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-lg float-left mx-5\",\n        onClick: handleUpClick,\n        children: \"Copy to clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" words  and character \", text.length, \" wpm \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Textit, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n\n_c = Textit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textit\");","map":{"version":3,"sources":["/Users/akanshchoudhary/Desktop/isApplesiliconready/paramReact/src/component/Textit.js"],"names":["React","useState","copy","Textit","props","handleUpClick","text","handleUpChange","event","setText","target","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,SAAP;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrC,QAAMC,aAAa,GAAG,MAAK;AAAC;AAC3BH,IAAAA,IAAI,CAACI,IAAD,CAAJ;AAEA,GAHD;;AAIA,QAAMC,cAAc,GAAIC,KAAD,IAAU;AAAC;AACjCC,IAAAA,OAAO,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP;AAED,GAHA;;AAMC,QAAK,CAACL,IAAD,EAAMG,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA9B;AAEE,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAI,WAAlB;AAAA,6BAEA;AAAK,QAAA,KAAK,EAAC,iBAAX;AAAA,+BACkB;AAAU,UAAA,KAAK,EAAC,wBAAhB;AAAyC,UAAA,KAAK,EAAGK,IAAjD;AAAuD,UAAA,QAAQ,EAAEC,cAAjE;AAAiF,UAAA,WAAW,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BAEc;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,wCAA5B;AAAqE,QAAA,OAAO,EAAEF,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFd;AAAA;AAAA;AAAA;AAAA,YATA,eAcC;AAAK,MAAA,SAAS,EAAI,aAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6CAA0BC,IAAI,CAACM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD,eAkBC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBD,eAmBC;AAAA,gBAAIN;AAAJ;AAAA;AAAA;AAAA;AAAA,YAnBD;AAAA,kBADF;AAwBH;;GArCuBH,M;;KAAAA,M","sourcesContent":["import React,{useState} from 'react'\nimport copy from \"copy-to-clipboard\"; \nimport './A.css';\n\nexport default function Textit(props) {\n const handleUpClick = () =>{;\n  copy(text)\n\n }\n const handleUpChange = (event) =>{;\n  setText(event.target.value);\n\n}\n\n\n  const[text,setText] = useState(\"\");\n\n    return (\n      <>\n      <div className  = \"container\" >\n     \n      <div class=\"modal-body my-5\" >\n                        <textarea class=\"form-control col-xs-12\" value ={text} onChange={handleUpChange} placeholder=\"\"></textarea>\n                    </div>\n       \n        \n      </div>\n      <div class=\"btnn\">\n                  \n                    <button type=\"button\" class=\"btn btn-success btn-lg float-left mx-5\" onClick={handleUpClick}>Copy to clipboard</button>\n                </div>\n     \n       <div className  = \"text-center\" >\n         <h2>your text summary</h2>\n         <p> words  and character {text.length} wpm </p>\n         </div>\n       <p className=\"text-center\">Preview</p>\n       <p>{text}</p>\n      \n   </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}